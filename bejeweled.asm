bejwl	START 	0
		JSUB 	sinit
		JSUB 	drwbrd
		LDX 	#3
		LDA 	#2
		JSUB 	chgem
		LDX 	#63
		LDA 	#3
		JSUB 	chgem
		JSUB 	drwbrd
		
halt	J		halt
err		J 		err

. Change gem
. A -> new gem id
. X -> board index
chgem
	+STL @stkptr
	JSUB spush
	+STX @stkptr
	JSUB spush
	+STA @stkptr
	JSUB spush

	+STCH 	board, X
	LDCH 	#0
	+STCH 	brdval, X

	JSUB spop
	+LDA @stkptr
	JSUB spop
	+LDX @stkptr
	JSUB spop
	+LDL @stkptr
	RSUB

. Draws the board
drwbrd
	+STL @stkptr
	JSUB spush
	+STX @stkptr
	JSUB spush
	+STA @stkptr
	JSUB spush
	+STB @stkptr
	JSUB spush
	+STS @stkptr
	JSUB spush
	+STT @stkptr
	JSUB spush

	LDX 	#0
	LDA 	#0
drbdlp
	. Check if redraw is necessary
	+LDCH 	brdval, X
	COMP 	#0
	JGT 	drlpct
	LDCH 	#1
	+STCH 	brdval, X

	. Load gem
	+LDCH 	board, X
	. Load board index
	RMO 	X, B
	JSUB 	drwgem

drlpct
	TIX 	#64
	JLT 	drbdlp
	
	JSUB spop
	+LDT @stkptr
	JSUB spop
	+LDS @stkptr
	JSUB spop
	+LDB @stkptr
	JSUB spop
	+LDA @stkptr
	JSUB spop
	+LDX @stkptr
	JSUB spop
	+LDL @stkptr
	RSUB

. Draws a gem
. Gem id in register A
. Board index in register B
drwgem
	+STL @stkptr
	JSUB spush
	+STX @stkptr
	JSUB spush
	+STB @stkptr
	JSUB spush
	+STS @stkptr
	JSUB spush
	+STT @stkptr
	JSUB spush

	. Store gem id for later
	RMO 	A, X

	. Calculate board X and Y
	. Y_idx = b_idx / board_col_count , this must trunacte it
	RMO 	B, A
	DIV 	#8	. board_col_count = 8
	RMO 	A, T
	. X_idx = b_idx - Y_idx * board_col_count
	MUL 	#8 . board_col_count = 8
	SUBR 	A, B
	RMO 	B, S

	. They are both not screen coordinates, so we need to adjust them
	LDA 	#16 . board_to_screen_coords = 16
	MULR 	A, S
	MULR 	A, T

	. Calculate gem X and Y
	. Y_idx = b_idx / atlas_count , this must trunacte it
	RMO 	X, A
	DIV 	#4 . atlas_count = 4
	RMO 	A, B
	. X_idx = b_idx - Y_idx * atlas_count
	MUL 	#4 . atlas_count = 4
	MUL 	#-1
	ADDR 	X, A
	RMO 	A, X

	. They are both not screen coordinates, so we need to adjust them
	LDA 	#16 . sprite_size = 16
	MULR 	A, X
	MULR 	A, B
	RMO 	B, A
	RMO 	X, B

	JSUB drwsprf
	
	JSUB spop
	+LDT @stkptr
	JSUB spop
	+LDS @stkptr
	JSUB spop
	+LDB @stkptr
	JSUB spop
	+LDX @stkptr
	JSUB spop
	+LDL @stkptr
	RSUB

. Draws a sprite on the screen.
. sprite Y coord on atlas in register A
. sprite X coord on atlas in register B
. X coord in register S
. Y coord in register T
drwspr	+STL	@stkptr
	JSUB	spush
	+STX	@stkptr
	JSUB	spush
	
	. calculate the start index of the sprite on the atlas
	+MUL 	#atlasw
	ADDR 	B, A
	RMO 	A, B
	
	. calculate the start index of the drawing area on screen
	RMO		T, A
	+MUL	#gscrw
	ADDR	S, A
	RMO 	A, T
	
	. B contains start index of sprite, T contains start index of draw area on screen
	. Adding #atlasw to B will increase sprite y by 1
	. Adding #gscrw to T will increase screen y by 1

	LDX 	#0
	LDS 	#0
drwclp
	
	. draw the first line
	LDX 	#0
drwllp
	. get sprite offset
	ADDR 	B, X
	. load 3 bytes
	+LDA 	sprtmap, X 	. If the first byte being read is ff this will read the wrong value
	SUBR 	B, X
	
	. get screen offset
	ADDR 	T, X
	. print 3 bytes
	+STA 	gscrptr, X
	
	. add 3 to loop index X
	RMO 	T, A
	SUB 	#3
	SUBR 	A, X
	
	. Check if 15 bytes have been printed
	LDA 	#15
	COMPR 	A, X
	JGT 	drwllp . drawing bytes 0 to 12
	. Check if 16 bytes have been printed
	LDA 	#16
	COMPR 	A, X
	JEQ 	lndrwn . all 16 bytes drawn 
	
	. 15 bytes drawn already, but not 16
	. draw remaining 16%3=1 bytes, by going back 2 and redarwing 3 of them
	LDA 	#2
	SUBR 	A, X
	J 		drwllp
	
lndrwn
	. draw next column
	LDA 	#gscrw
	ADDR 	A, T
	LDA 	#atlasw
	ADDR 	A, B
	LDA 	#1
	ADDR 	A, S
	LDA 	#16
	
	
	COMPR 	A, S
	JGT 	drwclp
	
	

	JSUB	spop
	+LDX	@stkptr
	JSUB	spop
	+LDL	@stkptr
	RSUB
	
. Draws a sprite on the screen.
. sprite Y coord on atlas in register A
. sprite X coord on atlas in register B
. X coord in register S
. Y coord in register T
drwsprf	+STL	@stkptr
	JSUB	spush
	+STX	@stkptr
	JSUB	spush
	
	. calculate the start index of the sprite on the atlas
	+MUL 	#atlasw
	ADDR 	B, A
	RMO 	A, B
	
	. calculate the start index of the drawing area on screen
	RMO		T, A
	+MUL	#gscrw
	ADDR	S, A
	RMO 	A, T
	
	. B contains start index of sprite, T contains start index of draw area on screen
	. Adding #atlasw to B will increase sprite y by 1
	. Adding #gscrw to T will increase screen y by 1

	LDX 	#0
	LDS 	#0
drwclpf
	
	. draw the first line
	LDX 	#0
drwllpf
	. get sprite offset
	ADDR 	B, X
	. load 6 bytes
	+LDF 	sprtmap, X 	. If the first byte being read is ff this will read the wrong value
	SUBR 	B, X
	
	. get screen offset
	ADDR 	T, X
	. print 6 bytes
	+STF 	gscrptr, X
	
	. add 6 to loop index X
	RMO 	T, A
	SUB 	#6
	SUBR 	A, X
	
	. Check if 12 bytes have been printed
	LDA 	#12
	COMPR 	A, X
	JGT 	drwllpf . drawing bytes 0 to 12
	. Check if 16 bytes have been printed
	LDA 	#16
	COMPR 	A, X
	JEQ 	lndrwnf . all 16 bytes drawn 
	
	. 12 bytes drawn already, but not 16
	. draw remaining 16%6=4 bytes
	LDA 	#2
	SUBR 	A, X
	J 		drwllpf
	
lndrwnf
	. draw next column
	LDA 	#gscrw
	ADDR 	A, T
	LDA 	#atlasw
	ADDR 	A, B
	LDA 	#1
	ADDR 	A, S
	LDA 	#16
	
	
	COMPR 	A, S
	JGT 	drwclpf
	
	

	JSUB	spop
	+LDX	@stkptr
	JSUB	spop
	+LDL	@stkptr
	RSUB

. Basic stack functionality routines
.
. Initialize the stack, usage:
. JSUB sinit
sinit
	LDA	#stack
	ADD	#stklen
	SUB	#3
	+STA	stkptr
	RSUB

. Push a register on the stack, usage:
. +STA @stkptr
. JSUB spush
spush
	STA	spptmp
	+LDA	stkptr
	SUB	#3
	+STA	stkptr
	LDA	spptmp
	RSUB

. Pop from the stack, usage:
. JSUB spop
. +LDA @stkptr
spop
	STA	spptmp
	+LDA	stkptr
	ADD	#3
	+STA	stkptr
	LDA	spptmp
	RSUB

. stack push and stack pop temporary variables, shared since no multi threading
spptmp	RESW	1

stack	RESW	1000
stkend	EQU	*
stkptr	RESW	1
stklen	EQU	stkend - stack

. 16x16 per sprite, 8 sprites => 16x8 = 128
gscrptr	EQU		0xA000
gscrw 	EQU		128
gscrh 	EQU		128

. 8x8 game board
board 	RESB 	64
. Wether the currently displayed board index is valid
brdval 	RESB 	64

atlasw 	EQU 	64
sprtmap EQU 	*
sprites	
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xc0
		BYTE	0xe3
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xcc
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xf0
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xc7
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3
		BYTE	0xe3